{"version":3,"file":"defi-sdk.esm.js","sources":["../src/configs/addresses.ts","../src/entities/entities.ts","../src/entities/builder.ts","../src/errors/protocolDoesNotExist.ts","../src/defisdk.ts","../src/configs/protocols.ts","../src/configs/tokenAdapters.ts"],"sourcesContent":["import { ContractAddresses } from '../protocols/interfaces';\n\nexport const addresses = {\n  adapterRegistry: '0x06FE76B2f432fdfEcAEf1a7d4f6C3d41B5861672',\n} as ContractAddresses;\n","import {\n  AdapterBalanceInterface,\n  AdapterMetadataInterface,\n  AssetBalanceInterface,\n  ProtocolBalanceInterface,\n  ProtocolMetadataInterface,\n  TokenBalanceInterface,\n  TokenMetadataInterface,\n} from '../protocols/interfaces';\nimport { Address } from '../protocols/types';\nimport { BigNumber } from 'ethers/utils';\n\nexport class ProtocolBalance implements ProtocolBalanceInterface {\n  balances: [AdapterBalanceInterface];\n  metadata: ProtocolMetadataInterface;\n\n  constructor(balances: [AdapterBalance], metadata: ProtocolMetadata) {\n    this.metadata = metadata;\n    this.balances = balances;\n  }\n}\n\nexport class ProtocolMetadata implements ProtocolMetadataInterface {\n  description: string;\n  logo: URL;\n  name: string;\n  version: BigInt;\n  website: URL;\n\n  constructor(\n    name: string,\n    description: string,\n    website: string,\n    logo: string,\n    version: BigNumber\n  ) {\n    this.name = name;\n    this.description = description;\n    this.website = new URL('https://' + website);\n    this.logo = new URL('https://' + logo);\n    //TODO: Check int\n    this.version = BigInt(version.toNumber());\n  }\n}\n\nexport class AdapterBalance implements AdapterBalanceInterface {\n  balances: [AssetBalanceInterface];\n  metadata: AdapterMetadataInterface;\n\n  constructor(balances: [AssetBalance], metadata: AdapterMetadata) {\n    this.metadata = metadata;\n    this.balances = balances;\n  }\n}\n\nexport class AdapterMetadata implements AdapterMetadataInterface {\n  address: Address;\n  type: string;\n\n  constructor(address: Address, type: string) {\n    this.address = address;\n    this.type = type;\n  }\n}\n\nexport class AssetBalance implements AssetBalanceInterface {\n  base: TokenBalanceInterface;\n  underlying: [TokenBalanceInterface];\n\n  constructor(base: TokenBalance, underlying: [TokenBalance]) {\n    this.base = base;\n    this.underlying = underlying;\n  }\n}\n\nexport class TokenBalance implements TokenBalanceInterface {\n  balance: BigInt;\n  metadata: TokenMetadataInterface;\n\n  constructor(balance: BigInt, metadata: TokenMetadata) {\n    this.balance = balance;\n    this.metadata = metadata;\n  }\n\n  getAmount(): BigNumber {\n    return new BigNumber(this.balance.toString()).div(\n      new BigNumber(10).pow(this.metadata.decimals.toString())\n    );\n  }\n}\n\nexport class TokenMetadata implements TokenMetadataInterface {\n  address: Address;\n  decimals: number;\n  name: string;\n  symbol: string;\n\n  constructor(\n    address: Address,\n    decimals: number,\n    name: string,\n    symbol: string\n  ) {\n    this.address = address;\n    this.decimals = decimals;\n    this.name = name;\n    this.symbol = symbol;\n  }\n}\n","import {\n  AdapterBalance,\n  AdapterMetadata,\n  AssetBalance,\n  ProtocolBalance,\n  ProtocolMetadata,\n  TokenBalance,\n  TokenMetadata,\n} from './entities';\n\nexport class Builder {\n  protocolBalance(protocolBalance): ProtocolBalance {\n    return new ProtocolBalance(\n      protocolBalance.adapterBalances.map(adapterBalance => {\n        return this.adapterBalance(adapterBalance);\n      }),\n      this.protocolMetadata(protocolBalance.metadata)\n    );\n  }\n\n  adapterBalance(protocolAdapter): AdapterBalance {\n    return new AdapterBalance(\n      protocolAdapter.balances.map(adapterBalance => {\n        return this.assetBalance(adapterBalance);\n      }),\n      this.adapterMetadata(protocolAdapter.metadata)\n    );\n  }\n\n  protocolMetadata(protocol): ProtocolMetadata {\n    return new ProtocolMetadata(\n      protocol.name,\n      protocol.description,\n      protocol.websiteURL,\n      protocol.iconURL,\n      protocol.version\n    );\n  }\n\n  adapterMetadata(adapterMetadata): AdapterMetadata {\n    return new AdapterMetadata(\n      adapterMetadata.adapterAddress,\n      adapterMetadata.adapterType\n    );\n  }\n\n  assetBalance(assetBalance): AssetBalance {\n    return new AssetBalance(\n      this.tokenBalance(assetBalance.base),\n      assetBalance.underlying.map(underlying => {\n        return this.tokenBalance(underlying);\n      })\n    );\n  }\n\n  tokenBalance(tokenBalance): TokenBalance {\n    return new TokenBalance(\n      tokenBalance.amount.toString(),\n      this.tokenMetadata(tokenBalance.metadata)\n    );\n  }\n\n  tokenMetadata(metadata): TokenMetadata {\n    return new TokenMetadata(\n      metadata.token,\n      metadata.decimals,\n      metadata.name,\n      metadata.symbol\n    );\n  }\n}\n","export class ProtocolDoesNotExistError extends Error {\n  protocol: string;\n  constructor(protocol) {\n    super('Protocol [' + protocol + '] does not exists');\n    this.name = 'ProtocolDoesNotExistError';\n    this.protocol = protocol;\n  }\n}\n","import { Contract, ethers } from 'ethers';\nimport adapterRegistryABI from './configs/adapterRegistryABI.json';\nimport { addresses } from './configs/addresses';\nimport { DeFiSDKInterface } from './protocols/interfaces';\nimport { Address } from './protocols/types';\nimport { Builder } from './entities/builder';\nimport { ProtocolDoesNotExistError } from './errors/protocolDoesNotExist';\n\nexport class DeFiSDK implements DeFiSDKInterface {\n  protected adapterRegistry: Contract;\n  private builder: Builder;\n\n  constructor(nodeUrl: string) {\n    this.adapterRegistry = new ethers.Contract(\n      addresses.adapterRegistry,\n      adapterRegistryABI,\n      new ethers.providers.JsonRpcProvider(new URL(nodeUrl).toString())\n    );\n    this.builder = new Builder();\n  }\n\n  getProtocolNames() {\n    return this.adapterRegistry.getProtocolNames() as Promise<string[]>;\n  }\n\n  getProtocolMetaData(protocol: string) {\n    return this.adapterRegistry.getProtocolMetadata(protocol).then(protocol => {\n      return this.builder.protocolMetadata(protocol);\n    });\n  }\n\n  getTokenAdapterNames() {\n    return this.adapterRegistry.getTokenAdapterNames() as Promise<string[]>;\n  }\n\n  getProtocolBalance(account: Address, protocol: string) {\n    return this.getProtocolBalances(account, [protocol]).then(\n      protocolBalances => {\n        if (protocolBalances.length === 0) {\n          throw new ProtocolDoesNotExistError(protocol);\n        } else if (protocolBalances.length > 1) {\n          throw new RangeError('More than 1 protocol found.');\n        }\n        return protocolBalances[0];\n      }\n    );\n  }\n\n  getProtocolBalances(account: Address, protocols: string[]) {\n    return this.adapterRegistry\n      .getProtocolBalances(account, protocols)\n      .then(protocolBalances => {\n        return protocolBalances.map(protocolBalance => {\n          return this.builder.protocolBalance(protocolBalance);\n        });\n      });\n  }\n\n  getAccountBalances(account: Address) {\n    return this.adapterRegistry.getBalances(account).then(accountBalances => {\n      return accountBalances.map(protocolBalance => {\n        return this.builder.protocolBalance(protocolBalance);\n      });\n    });\n  }\n\n  getTokenComponents(type: string, token: Address) {\n    return this.adapterRegistry\n      .getFinalFullTokenBalance(type, token)\n      .then(asset => {\n        return this.builder.assetBalance(asset);\n      });\n  }\n}\n","export const Protocols = {\n  ZRX_STAKING: '0x Staking',\n  AAVE: 'Aave',\n  BALANCER: 'Balancer',\n  BANCOR: 'Bancor',\n  CHAI: 'Chai',\n  COMPOUND: 'Compound',\n  CURVE: 'Curve',\n  DSR: 'Dai Savings Rate',\n  DMM: 'DeFi Money Market',\n  DYDX: 'dYdX',\n  IDLE: 'Idle',\n  IEARN_V2: 'iearn.finance (v2)',\n  IEARN_V3: 'iearn.finance (v3)',\n  MCD: 'Multi-Collateral Dai',\n  PIEDAO: 'PieDAO',\n  POOLTOGETHER: 'PoolTogether',\n  SYNTHETIX: 'Synthetix',\n  TOKENSETS: 'TokenSets',\n  UNISWAP_V1: 'Uniswap V1',\n  UNISWAP_V2: 'Uniswap V2',\n};\n","export const TokenAdapters = {\n  AAVE: 'AToken',\n  BALANCER: 'Balancer pool token',\n  CHAI: 'Chai token',\n  COMPOUND: 'CToken',\n  CURVE: 'Curve pool token',\n  ERC20: 'ERC20',\n  IDLE: 'IdleToken',\n  DMM: 'MToken',\n  PIEDAO: 'PieDAO Pie Token',\n  POOLTOGETHER: 'PoolTogether pool',\n  TOKENSETS: 'SetToken',\n  BANCOR: 'SmartToken',\n  UNISWAP_V1: 'Uniswap V1 pool token',\n  UNISWAP_V2: 'Uniswap V2 pool token',\n  IEARN: 'YToken',\n};\n"],"names":["addresses","adapterRegistry","ProtocolBalance","balances","metadata","ProtocolMetadata","name","description","website","logo","version","URL","BigInt","toNumber","AdapterBalance","AdapterMetadata","address","type","AssetBalance","base","underlying","TokenBalance","balance","getAmount","BigNumber","toString","div","pow","decimals","TokenMetadata","symbol","Builder","protocolBalance","adapterBalances","map","adapterBalance","protocolMetadata","protocolAdapter","assetBalance","adapterMetadata","protocol","websiteURL","iconURL","adapterAddress","adapterType","tokenBalance","amount","tokenMetadata","token","ProtocolDoesNotExistError","Error","DeFiSDK","nodeUrl","ethers","Contract","adapterRegistryABI","providers","JsonRpcProvider","builder","getProtocolNames","getProtocolMetaData","getProtocolMetadata","then","getTokenAdapterNames","getProtocolBalance","account","getProtocolBalances","protocolBalances","length","RangeError","protocols","getAccountBalances","getBalances","accountBalances","getTokenComponents","getFinalFullTokenBalance","asset","Protocols","ZRX_STAKING","AAVE","BALANCER","BANCOR","CHAI","COMPOUND","CURVE","DSR","DMM","DYDX","IDLE","IEARN_V2","IEARN_V3","MCD","PIEDAO","POOLTOGETHER","SYNTHETIX","TOKENSETS","UNISWAP_V1","UNISWAP_V2","TokenAdapters","ERC20","IEARN"],"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"}