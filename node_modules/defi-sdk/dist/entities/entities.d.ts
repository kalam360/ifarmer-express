import { AdapterBalanceInterface, AdapterMetadataInterface, AssetBalanceInterface, ProtocolBalanceInterface, ProtocolMetadataInterface, TokenBalanceInterface, TokenMetadataInterface } from '../protocols/interfaces';
import { Address } from '../protocols/types';
import { BigNumber } from 'ethers/utils';
export declare class ProtocolBalance implements ProtocolBalanceInterface {
    balances: [AdapterBalanceInterface];
    metadata: ProtocolMetadataInterface;
    constructor(balances: [AdapterBalance], metadata: ProtocolMetadata);
}
export declare class ProtocolMetadata implements ProtocolMetadataInterface {
    description: string;
    logo: URL;
    name: string;
    version: BigInt;
    website: URL;
    constructor(name: string, description: string, website: string, logo: string, version: BigNumber);
}
export declare class AdapterBalance implements AdapterBalanceInterface {
    balances: [AssetBalanceInterface];
    metadata: AdapterMetadataInterface;
    constructor(balances: [AssetBalance], metadata: AdapterMetadata);
}
export declare class AdapterMetadata implements AdapterMetadataInterface {
    address: Address;
    type: string;
    constructor(address: Address, type: string);
}
export declare class AssetBalance implements AssetBalanceInterface {
    base: TokenBalanceInterface;
    underlying: [TokenBalanceInterface];
    constructor(base: TokenBalance, underlying: [TokenBalance]);
}
export declare class TokenBalance implements TokenBalanceInterface {
    balance: BigInt;
    metadata: TokenMetadataInterface;
    constructor(balance: BigInt, metadata: TokenMetadata);
    getAmount(): BigNumber;
}
export declare class TokenMetadata implements TokenMetadataInterface {
    address: Address;
    decimals: number;
    name: string;
    symbol: string;
    constructor(address: Address, decimals: number, name: string, symbol: string);
}
